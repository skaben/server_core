# Generated by Django 4.0.6 on 2022-08-10 17:24

import core.helpers
from django.db import migrations, models
import django.db.models.deletion
import shape.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assets', '0001_initial'),
        ('alert', '0001_initial'),
        ('device', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=64)),
                ('surname', models.CharField(max_length=64)),
                ('position', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Код доступа (ключ-карта)',
                'verbose_name_plural': 'Коды доступа (ключ-карты)',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('uuid', models.UUIDField(default=core.helpers.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('timer', models.IntegerField(default=-1, verbose_name='время до операции')),
                ('display', models.CharField(default='открыть пункт меню', max_length=128, verbose_name='название пункта в меню')),
                ('option', models.CharField(choices=[('audio', 'audio'), ('video', 'video'), ('image', 'image'), ('text', 'text'), ('game', 'game'), ('user', 'input')], default='user', max_length=32)),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.audiofile')),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.hackgame')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.imagefile')),
                ('text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.textfile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.userinput')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.videofile')),
            ],
            options={
                'verbose_name': 'Элемент меню терминала',
                'verbose_name_plural': 'Элементы меню терминала',
            },
        ),
        migrations.CreateModel(
            name='WorkMode',
            fields=[
                ('uuid', models.UUIDField(default=core.helpers.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='terminal mode', max_length=48)),
                ('header', models.CharField(default='terminal vt40k', max_length=48)),
                ('footer', models.CharField(default='unauthorized access is strictly prohibited', max_length=48)),
                ('shape', models.CharField(choices=[('dungeon', 'dungeon'), ('console', 'console'), ('log', 'log')], default='dungeon', max_length=48)),
                ('menu_set', models.ManyToManyField(to='shape.menuitem')),
                ('state', models.ManyToManyField(blank=True, to='alert.alertstate')),
            ],
            options={
                'verbose_name': 'Режим (полное меню) терминала',
                'verbose_name_plural': 'Режим (полное меню) терминала',
            },
        ),
        migrations.CreateModel(
            name='SimpleConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config', models.JSONField(default=shape.models.get_default_dict)),
                ('dev_type', models.CharField(max_length=16)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='alert.alertstate')),
            ],
            options={
                'verbose_name': 'Поведение пассивного устройства',
                'verbose_name_plural': 'Поведение пассивных устройств',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shape.accesscode')),
                ('lock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.lock')),
                ('state_id', models.ManyToManyField(to='alert.alertstate')),
            ],
            options={
                'verbose_name': 'Доступ ключ-карты (права)',
                'verbose_name_plural': 'Доступы ключ-карт (права)',
                'unique_together': {('card', 'lock')},
            },
        ),
    ]
