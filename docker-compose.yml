version: "3"

services:

  skaben:
    build: .
    healthcheck:
      test: curl -f http://localhost:8000 || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
    env_file: '.env'
    volumes:
      - ./skaben:/skaben
      - ./static:/static
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py createcachetable &&
             python manage.py migrate django_celery_results &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=skaben
      - DB_USER=postgres
      - DB_PASS=superpass123
      - DJANGO_SETTINGS_MODULE=skaben.settings.devel
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    networks:
      - core_network

  rabbitmq:
    build: './build/rabbitmq'
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "15675:15675"
      - "15692:15692"
      - "5672:5672"
      - "1883:1883"
      - "8883:8883"
    networks:
      - core_network

  db:
    image: postgres:10-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=skaben
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=superpass123
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - core_network

  nginx:
    image: nginx:latest
    restart: unless-stopped
    #command: "/wait-for-it.sh skaben:8000 --timeout=2"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./build/wait-for-it.sh:/wait-for-it.sh
      - ./build/nginx/conf.d/local.dev.conf:/etc/nginx/conf.d/local.conf
      - ./logs/nginx:/var/log/nginx
      - ./static:/static
    depends_on:
      - skaben
    networks:
      - core_network

volumes:
  pgdata: {}

networks:
  core_network:
    driver: bridge
