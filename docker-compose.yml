version: "3"

services:

  skaben:
    build: .
    healthcheck:
      test: curl -f http://localhost:8000 || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
    env_file: '.env'
    volumes:
      - ./skaben:/skaben
      - static_volume:/skaben/static
      - ./docker_build/wait-for-it.sh:/wait-for-it.sh
      - files_volume:/media
    command: >
      sh -c "
             /wait-for-it.sh rabbitmq:5672 &&
             python manage.py wait_for_db &&
             python manage.py collectstatic --no-input --clear &&
             python manage.py createcachetable &&
             yes | python manage.py makemigrations &&
             yes yes | python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    networks:
      - core_network

  rabbitmq:
    build: './docker_build/rabbitmq'
    hostname: "rabbitmq"
    #env_file: '.env'
    ports:
      - "15672:15672"
      - "15674:15674"
      - "15675:15675"
      - "15692:15692"
      - "5672:5672"
      - "1883:1883"
      - "8883:8883"
    networks:
      - core_network

  db:
    image: postgres:10-alpine
    restart: unless-stopped
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - core_network
    env_file: ".env"

  nginx:
    build: './docker_build/nginx'
    restart: unless-stopped
    #command: "/wait-for-it.sh skaben:8000 --timeout=2"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker_build/wait-for-it.sh:/wait-for-it.sh
      - ./docker_build/nginx/conf.d/local.dev.conf:/etc/nginx/conf.d/local.conf
      - ./logs/nginx:/var/log/nginx
      - static_volume:/skaben/static
    depends_on:
      - skaben
    networks:
      - core_network

volumes:
  db_volume: {}
  static_volume: {}
  files_volume: {}

networks:
  core_network:
    driver: bridge
