# Generated by Django 5.0.3 on 2024-05-11 15:46

import assets.storages
import core.helpers
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(default='filename', max_length=128)),
                ('hash', models.CharField(default='', max_length=64)),
                ('file', models.FileField(storage=assets.storages.OverwriteStorage(location='/media/audio'), upload_to='')),
            ],
            options={
                'verbose_name': 'Аудио',
            },
        ),
        migrations.CreateModel(
            name='HackGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempts', models.IntegerField(default=3)),
                ('difficulty', models.IntegerField(choices=[(6, 'easy'), (8, 'normal'), (10, 'medium'), (12, 'hard')], default=8)),
                ('wordcount', models.IntegerField(default=15)),
                ('chance', models.IntegerField(default=15)),
            ],
            options={
                'verbose_name': 'Настройки мини-игры Fallout Hack',
            },
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(default='filename', max_length=128)),
                ('hash', models.CharField(default='', max_length=64)),
                ('file', models.ImageField(storage=assets.storages.OverwriteStorage(location='/media/image'), upload_to='')),
            ],
            options={
                'verbose_name': 'Изображение',
            },
        ),
        migrations.CreateModel(
            name='TextFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(default='game doc', max_length=128)),
                ('hash', models.CharField(default='', max_length=64)),
                ('header', models.CharField(default='text document', max_length=64)),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, storage=assets.storages.OverwriteStorage(location='/media/text'), upload_to='')),
            ],
            options={
                'verbose_name': 'Текстовый файл',
            },
        ),
        migrations.CreateModel(
            name='UserInput',
            fields=[
                ('uuid', models.UUIDField(default=core.helpers.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(default='action', help_text='Значение будет передано в составе INFO пакета `action: <значение>`', max_length=64, unique=True, verbose_name='Передаваемое значение')),
                ('expected', models.CharField(blank=True, default='', help_text='По этому значению может быть выполнена проверка поля `user_input` INFO пакета', max_length=128, verbose_name='Ожидаемое значение')),
                ('delay', models.IntegerField(blank=True, default=0, null=True, verbose_name='Задержка интерфейса пользователя')),
            ],
            options={
                'verbose_name': 'Пользовательский интерфейс ввода',
                'verbose_name_plural': 'Пользовательские интерфейсы ввода',
            },
        ),
        migrations.CreateModel(
            name='VideoFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(default='filename', max_length=128)),
                ('hash', models.CharField(default='', max_length=64)),
                ('file', models.FileField(storage=assets.storages.OverwriteStorage(location='/media/video'), upload_to='')),
            ],
            options={
                'verbose_name': 'Видео',
            },
        ),
    ]
