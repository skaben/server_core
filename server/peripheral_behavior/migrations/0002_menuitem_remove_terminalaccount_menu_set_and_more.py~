# Generated by Django 5.0.3 on 2024-05-09 11:46

import core.helpers
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('assets', '0002_remove_userinput_message_alter_userinput_action_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('peripheral_behavior', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('uuid', models.UUIDField(default=core.helpers.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('timer', models.SmallIntegerField(default=0, help_text='Ограничение на просмотр этого контента в секундах', verbose_name='Время доступа')),
                ('label', models.CharField(max_length=128, verbose_name='Надпись на кнопке')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Пункт меню',
                'verbose_name_plural': 'Пункты меню',
            },
        ),
        migrations.RemoveField(
            model_name='terminalaccount',
            name='menu_set',
        ),
        migrations.AlterModelOptions(
            name='terminalaccount',
            options={'verbose_name': 'Пользовательское меню терминала', 'verbose_name_plural': 'Пользовательские меню терминала'},
        ),
        migrations.AddField(
            model_name='terminalaccount',
            name='password',
            field=models.CharField(blank=True, default='', help_text='Для чтения пунктов меню потребуется известный пароль или успешный взлом терминала', null=True, verbose_name='Пароль'),
        ),
        migrations.AlterField(
            model_name='passiveconfig',
            name='topic',
            field=models.CharField(choices=[('box', 'box'), ('rgb', 'rgb'), ('scl', 'scl'), ('pwr', 'pwr')], help_text='Канал MQTT.'),
        ),
        migrations.AlterField(
            model_name='terminalaccount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_behavior.skabenuser', verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='MenuItemAudio',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.audiofile', verbose_name='Связанное аудио')),
            ],
            options={
                'verbose_name': 'Аудио-документ',
                'verbose_name_plural': 'Аудио-документы',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemImage',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.imagefile', verbose_name='Связанное изображение')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemText',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.textfile', verbose_name='Связанный текст')),
            ],
            options={
                'verbose_name': 'Текстовый документ',
                'verbose_name_plural': 'Текстовые документы',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemUserInput',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('input_label', models.CharField(blank=True, default='', help_text='Допустимая длина - 64 символа', max_length=64, verbose_name='Заголовок поля ввода')),
                ('input_description', models.TextField(blank=True, default='', help_text='Сообщение для пользователя на экране ввода (max 256 символов)', max_length=256, verbose_name='Текст на экране')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.userinput', verbose_name='Пользовательский ввод')),
            ],
            options={
                'verbose_name': 'Пользовательский ввод',
                'verbose_name_plural': 'Пользовательский ввод',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemVideo',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.videofile', verbose_name='Связанное видео')),
            ],
            options={
                'verbose_name': 'Видео-документ',
                'verbose_name_plural': 'Видео-документы',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.AddField(
            model_name='terminalaccount',
            name='menu_items',
            field=models.ManyToManyField(related_name='menu_items', to='peripheral_behavior.menuitem'),
        ),
        migrations.DeleteModel(
            name='TerminalMenuItem',
        ),
    ]
