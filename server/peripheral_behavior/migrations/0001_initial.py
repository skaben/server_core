# Generated by Django 5.0.3 on 2024-05-12 19:49

import core.helpers
import core.models.base
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alert', '0001_initial'),
        ('assets', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('peripheral_devices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('uuid', models.UUIDField(default=core.helpers.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('timer', models.SmallIntegerField(default=0, help_text='Ограничение на просмотр этого контента в секундах', verbose_name='Время доступа')),
                ('label', models.CharField(max_length=128, verbose_name='Надпись на кнопке')),
                ('comment', models.CharField(blank=True, default='', help_text='Не будет виден игроку', max_length=128, verbose_name='Комментарий')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Пункт меню',
                'verbose_name_plural': 'Пункты меню',
            },
            bases=(models.Model, core.models.base.HashModelMixin),
        ),
        migrations.CreateModel(
            name='SkabenUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, unique=True, verbose_name='Имя')),
                ('description', models.CharField(max_length=96, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Игровой пользователь',
                'verbose_name_plural': 'Игровые пользователи',
            },
        ),
        migrations.CreateModel(
            name='AccessCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Произвольный цифровой код или код карты', max_length=16, unique=True, verbose_name='Код доступа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_behavior.skabenuser')),
            ],
            options={
                'verbose_name': 'Код доступа (ключ-карта)',
                'verbose_name_plural': 'Коды доступа (ключ-карты)',
            },
        ),
        migrations.CreateModel(
            name='TerminalAccount',
            fields=[
                ('uuid', models.UUIDField(default=core.helpers.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('password', models.CharField(blank=True, default='', help_text='Для чтения пунктов меню потребуется известный пароль или успешный взлом терминала', null=True, verbose_name='Пароль')),
                ('header', models.CharField(default='terminal vt40k', max_length=64)),
                ('footer', models.CharField(default='unauthorized access is strictly prohibited', max_length=64)),
                ('menu_items', models.ManyToManyField(related_name='menu_items', to='peripheral_behavior.menuitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_behavior.skabenuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользовательское меню терминала',
                'verbose_name_plural': 'Пользовательские меню терминала',
            },
            bases=(models.Model, core.models.base.HashModelMixin),
        ),
        migrations.CreateModel(
            name='TerminalMenuSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_behavior.terminalaccount', verbose_name='Аккаунт')),
                ('state_id', models.ManyToManyField(to='alert.alertstate', verbose_name='Уровень тревоги')),
                ('terminal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_devices.terminaldevice', verbose_name='Терминал')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItemAudio',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.audiofile', verbose_name='Связанное аудио')),
            ],
            options={
                'verbose_name': 'Аудио-документ',
                'verbose_name_plural': 'Аудио-документы',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemImage',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.imagefile', verbose_name='Связанное изображение')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemText',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.textfile', verbose_name='Связанный текст')),
            ],
            options={
                'verbose_name': 'Текстовый документ',
                'verbose_name_plural': 'Текстовые документы',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemUserInput',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('input_label', models.CharField(blank=True, default='', help_text='Допустимая длина - 64 символа', max_length=64, verbose_name='Заголовок поля ввода')),
                ('input_description', models.TextField(blank=True, default='', help_text='Сообщение для пользователя на экране ввода (max 256 символов)', max_length=256, verbose_name='Текст на экране')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.userinput', verbose_name='Пользовательский ввод')),
            ],
            options={
                'verbose_name': 'Пользовательский ввод',
                'verbose_name_plural': 'Пользовательский ввод',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='MenuItemVideo',
            fields=[
                ('menuitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='peripheral_behavior.menuitem')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.videofile', verbose_name='Связанное видео')),
            ],
            options={
                'verbose_name': 'Видео-документ',
                'verbose_name_plural': 'Видео-документы',
            },
            bases=('peripheral_behavior.menuitem',),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_behavior.accesscode', verbose_name='Ключ-карта')),
                ('lock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peripheral_devices.lockdevice', verbose_name='Замок')),
                ('state_id', models.ManyToManyField(to='alert.alertstate', verbose_name='Уровень тревоги')),
            ],
            options={
                'verbose_name': 'Доступ ключ-карты (права)',
                'verbose_name_plural': 'Доступы ключ-карт (права)',
                'unique_together': {('card', 'lock')},
            },
        ),
    ]
