# Generated by Django 5.0.3 on 2024-05-11 19:48

import core.helpers
import django.db.models.deletion
from core.validators import mac_validator
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alert', '0001_initial'),
        ('peripheral_behavior', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LockDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('mac_addr', models.CharField(max_length=12, unique=True, validators=[mac_validator], verbose_name='MAC')),
                ('description', models.CharField(default='smart complex device', max_length=128, verbose_name='Описание')),
                ('timestamp', models.IntegerField(default=core.helpers.get_server_timestamp, verbose_name='Время последнего ответа')),
                ('override', models.BooleanField(default=False, verbose_name='Отключить авто-обновление')),
                ('sound', models.BooleanField(default=False, verbose_name='Звук замка')),
                ('closed', models.BooleanField(default=True, verbose_name='Закрыт')),
                ('blocked', models.BooleanField(default=False, verbose_name='Заблокирован')),
                ('timer', models.IntegerField(default=10, verbose_name='Время автоматического закрытия')),
            ],
            options={
                'verbose_name': 'Лазерная дверь',
                'verbose_name_plural': 'Лазерные двери',
            },
        ),
        migrations.CreateModel(
            name='TerminalDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('mac_addr', models.CharField(max_length=12, unique=True, validators=[mac_validator], verbose_name='MAC')),
                ('description', models.CharField(default='smart complex device', max_length=128, verbose_name='Описание')),
                ('timestamp', models.IntegerField(default=core.helpers.get_server_timestamp, verbose_name='Время последнего ответа')),
                ('override', models.BooleanField(default=False, verbose_name='Отключить авто-обновление')),
                ('powered', models.BooleanField(default=False, verbose_name='Питание подключено')),
                ('blocked', models.BooleanField(default=False, verbose_name='Устройство заблокировано')),
                ('account_set', models.ManyToManyField(to='peripheral_behavior.terminalaccount')),
            ],
            options={
                'verbose_name': 'Терминал',
                'verbose_name_plural': 'Терминалы',
            },
        ),
        migrations.CreateModel(
            name='PassiveConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config', models.JSONField(default=dict, help_text='JSON-объект с конфигурацией устройства.')),
                ('comment', models.CharField(blank=True, max_length=256, null=True)),
                ('topic', models.CharField(choices=[('box', 'box'), ('rgb', 'rgb'), ('scl', 'scl'), ('pwr', 'pwr')], help_text='Канал MQTT.')),
                ('state', models.ForeignKey(blank=True, help_text='Внешний ключ на объект AlertState, представляющий текущее состояние данжа.', null=True, on_delete=django.db.models.deletion.PROTECT, to='alert.alertstate')),
            ],
            options={
                'verbose_name': 'Пассивное устройство',
                'verbose_name_plural': 'Пассивные устройства',
                'unique_together': {('state', 'topic')},
            },
        ),
    ]
